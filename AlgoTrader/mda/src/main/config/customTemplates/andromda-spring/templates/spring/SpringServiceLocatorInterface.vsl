## new AlgoTrader template
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringServiceLocatorInterface.vsl in andromda-spring-cartridge.
//
#set ($generatedFile = "${serviceLocatorInterfaceName}.java")
#if($stringUtils.isNotEmpty($springTypesPackage))
package $springTypesPackage;
#set ($generatedFile = "${stringUtils.replace($springTypesPackage,'.','/')}/${generatedFile}")
#end

/**
 * Locates and provides all available application services.
 */
public interface $serviceLocatorInterfaceName
{

    /**
     * Initializes the Spring application context from
     * the given <code>beanFactoryReferenceLocation</code>.  If <code>null</code>
     * is specified for the <code>beanFactoryReferenceLocation</code>
     * then the default application context will be used.
     *
     * @param beanFactoryReferenceLocation the location of the beanRefFactory reference.
     */
    public void init(final String beanFactoryReferenceLocation);
	

    /**
     * Shuts down the ServiceLocator and releases any used resources.
     */
    public void shutdown();	

#foreach ($service in $services)
#if($service.remotable || !$stringUtils.isBlank($service.findTaggedValue('@algoTrader.service.client')))
#if($stringUtils.isBlank($service.superClass))
    /**
     * Gets an instance of {@link $service.fullyQualifiedName}.
     */
    public $service.fullyQualifiedName get${service.name}();

#end
#end
#end

    /**
     * Gets an instance of the given service.
     */
    public Object getService(String serviceName);

}